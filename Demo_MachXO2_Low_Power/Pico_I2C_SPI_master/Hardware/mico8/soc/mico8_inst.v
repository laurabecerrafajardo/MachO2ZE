//   ==================================================================
//   >>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<
//   ------------------------------------------------------------------
//   Copyright (c) 2006-2011 by Lattice Semiconductor Corporation
//   ------------------------------------------------------------------
//   ALL RIGHTS RESERVED
//
//   IMPORTANT: THIS FILE IS AUTO-GENERATED BY THE LATTICEMICO SYSTEM.
//
//   Permission:
//
//      Lattice Semiconductor grants permission to use this code
//      pursuant to the terms of the Lattice Semiconductor Corporation
//      Open Source License Agreement.
//
//   Disclaimer:
//
//      Lattice Semiconductor provides no warranty regarding the use or
//      functionality of this code. It is the user's responsibility to
//      verify the user’s design for consistency and functionality through
//      the use of formal verification methods.
//
//   --------------------------------------------------------------------
//
//                  Lattice Semiconductor Corporation
//                  5555 NE Moore Court
//                  Hillsboro, OR 97214
//                  U.S.A
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                         503-286-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
//   --------------------------------------------------------------------
//
//      Project:           mico8
//      File:              mico8_inst.v
//      Date:              Sat, 17 Mar 2012 16:45:11 EDT
//      Version:           1.3.95
//      Targeted Family:   MachXO2
//
//   =======================================================================

mico8 mico8_u ( 
.clk_i(clk_i),
.reset_n(reset_n)
, .uartSIN(uartSIN) // 
, .uartSOUT(uartSOUT) // 
, .slave_LCDclk(slave_LCDclk) // 
, .slave_LCDrst(slave_LCDrst) // 
, .slave_LCDslv_adr(slave_LCDslv_adr) // [32-1:0]
, .slave_LCDslv_master_data(slave_LCDslv_master_data) // [8-1:0]
, .slave_LCDslv_slave_data(slave_LCDslv_slave_data) // [8-1:0]
, .slave_LCDslv_strb(slave_LCDslv_strb) // 
, .slave_LCDslv_cyc(slave_LCDslv_cyc) // 
, .slave_LCDslv_ack(slave_LCDslv_ack) // 
, .slave_LCDslv_err(slave_LCDslv_err) // 
, .slave_LCDslv_rty(slave_LCDslv_rty) // 
, .slave_LCDslv_sel(slave_LCDslv_sel) // [3:0] 
, .slave_LCDslv_we(slave_LCDslv_we) // 
, .slave_LCDslv_bte(slave_LCDslv_bte) // [1:0] 
, .slave_LCDslv_cti(slave_LCDslv_cti) // [2:0] 
, .slave_LCDslv_lock(slave_LCDslv_lock) // 
, .slave_LCDintr_active_high(slave_LCDintr_active_high) // 
, .slave_EFBclk(slave_EFBclk) // 
, .slave_EFBrst(slave_EFBrst) // 
, .slave_EFBslv_adr(slave_EFBslv_adr) // [32-1:0]
, .slave_EFBslv_master_data(slave_EFBslv_master_data) // [8-1:0]
, .slave_EFBslv_slave_data(slave_EFBslv_slave_data) // [8-1:0]
, .slave_EFBslv_strb(slave_EFBslv_strb) // 
, .slave_EFBslv_cyc(slave_EFBslv_cyc) // 
, .slave_EFBslv_ack(slave_EFBslv_ack) // 
, .slave_EFBslv_err(slave_EFBslv_err) // 
, .slave_EFBslv_rty(slave_EFBslv_rty) // 
, .slave_EFBslv_sel(slave_EFBslv_sel) // [3:0] 
, .slave_EFBslv_we(slave_EFBslv_we) // 
, .slave_EFBslv_bte(slave_EFBslv_bte) // [1:0] 
, .slave_EFBslv_cti(slave_EFBslv_cti) // [2:0] 
, .slave_EFBslv_lock(slave_EFBslv_lock) // 
, .slave_EFBintr_active_high(slave_EFBintr_active_high) // 
);
